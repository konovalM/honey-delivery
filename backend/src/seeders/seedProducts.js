// seeders/seedProducts.js
const sequelize = require('../config/db');
const Product = require('../models/Product');

async function seed() {
  await sequelize.sync({ force: true }); // –æ—á–∏—Å—Ç–∫–∞ –∏ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü

  await Product.bulkCreate([
    {
      type: 'honey',
      title: '–ú–∞–π—Å–∫–∏–π –º—ë–¥',
      description: '–ù–∞—Ç—É—Ä–∞–ª—å–Ω—ã–π –º—ë–¥ –∏–∑ –≤–µ—Å–µ–Ω–Ω–∏—Ö —Ü–≤–µ—Ç–æ–≤.',
      price: 450,
      weight: 500,
    },
    {
      type: 'honey',
      title: '–ì—Ä–µ—á–∏—à–Ω—ã–π –º—ë–¥',
      description: '–¢—ë–º–Ω—ã–π –∏ –Ω–∞—Å—ã—â–µ–Ω–Ω—ã–π –≤–∫—É—Å.',
      price: 480,
      weight: 500,
    },
    {
      type: 'honey',
      title: '–¶–≤–µ—Ç–æ—á–Ω—ã–π –º—ë–¥',
      description: '–ú–µ–¥ —Å –ø–æ–ª–µ–≤—ã—Ö —Ü–≤–µ—Ç–æ–≤.',
      price: 400,
      weight: 500,
    },
    {
      type: 'honey',
      title: '–ê–∫–∞—Ü–∏–µ–≤—ã–π –º—ë–¥',
      description: '–ú–µ–¥ —Å –¥–µ—Ä–µ–≤—å–µ–≤ –ê–∫–∞—Ü–∏–∏. –ù–∏–∫–æ–≥–¥–∞ –Ω–µ –∫—Ä–∏—Å—Ç–∞–ª–ª–∏–∑—É–µ—Ç—Å—è!',
      price: 550,
      weight: 500,
    },
    {
      type: 'propolis',
      title: '–ü—Ä–æ–ø–æ–ª–∏—Å –æ—á–∏—â–µ–Ω–Ω—ã–π',
      description: '–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —É–∫—Ä–µ–ø–ª–µ–Ω–∏—è –∏–º–º—É–Ω–∏—Ç–µ—Ç–∞.',
      price: 250,
      weight: 100,
    },
    {
      type: 'pollen',
      title: '–ü—ã–ª—å—Ü–∞ —Ü–≤–µ—Ç–æ—á–Ω–∞—è',
      description: '–ë–æ–≥–∞—Ç—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫ –≤–∏—Ç–∞–º–∏–Ω–æ–≤.',
      price: 300,
      weight: 200,
    },
    {
      type: 'honeycomb',
      title: '–ú–µ–¥–æ–≤—ã–µ —Å–æ—Ç—ã',
      description: '–ù–∞—Ç—É—Ä–∞–ª—å–Ω—ã–µ –ø—á–µ–ª–∏–Ω—ã–µ —Å–æ—Ç—ã —Å –º—ë–¥–æ–º.',
      price: 600,
      weight: 400,
    },
  ]);

  console.log('üå± –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∑–∞—Å–µ—è–Ω—ã');
  process.exit();
}

seed().catch(err => {
  console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∏–¥–∏—Ä–æ–≤–∞–Ω–∏–∏:', err);
  process.exit(1);
});
